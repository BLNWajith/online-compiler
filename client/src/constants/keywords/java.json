{
  "keywords": [
    "abstract", "assert", "boolean", "break", "byte", "case", "catch", "char", "class", 
    "const", "continue", "default", "do", "double", "else", "enum", "extends", "final", 
    "finally", "float", "for", "goto", "if", "implements", "import", "instanceof", "int", 
    "interface", "long", "native", "new", "package", "private", "protected", "public", 
    "return", "short", "static", "strictfp", "super", "switch", "synchronized", "this", 
    "throw", "throws", "transient", "try", "void", "volatile", "while", "true", "false", 
    "null", "default", "module", "requires", "exports", "opens", "uses", "provides", "to", "with"
  ],
  "builtin_classes": [
    "Object", "String", "Integer", "Double", "Boolean", "Character", "Byte", "Short", 
    "Long", "Float", "Number", "System", "Math", "Thread", "Runnable", "Exception", 
    "RuntimeException", "IOException", "NullPointerException", "ArrayIndexOutOfBoundsException",
    "ClassNotFoundException", "IllegalArgumentException", "IllegalStateException",
    "IndexOutOfBoundsException", "NumberFormatException", "SecurityException",
    "StringIndexOutOfBoundsException", "UnsupportedOperationException", "CloneNotSupportedException",
    "InterruptedException", "ClassCastException", "ArithmeticException", "NegativeArraySizeException",
    "ArrayStoreException", "ClassCircularityError", "ClassFormatError", "Error", "ExceptionInInitializerError",
    "IncompatibleClassChangeError", "InstantiationError", "InternalError", "LinkageError",
    "NoClassDefFoundError", "NoSuchFieldError", "NoSuchMethodError", "OutOfMemoryError",
    "StackOverflowError", "ThreadDeath", "UnknownError", "UnsatisfiedLinkError", "VerifyError",
    "VirtualMachineError", "AbstractMethodError", "AssertionError", "BootstrapMethodError",
    "ExceptionInInitializerError", "IllegalAccessError", "IncompatibleClassChangeError",
    "InstantiationError", "NoSuchFieldError", "NoSuchMethodError", "UnsatisfiedLinkError"
  ],
  "common_methods": [
    "toString", "equals", "hashCode", "clone", "finalize", "getClass", "notify", "notifyAll",
    "wait", "length", "charAt", "substring", "indexOf", "lastIndexOf", "replace", "split",
    "trim", "toLowerCase", "toUpperCase", "startsWith", "endsWith", "contains", "isEmpty",
    "concat", "valueOf", "parseInt", "parseDouble", "parseLong", "parseFloat", "parseBoolean",
    "parseByte", "parseShort", "format", "printf", "println", "print", "read", "write",
    "close", "flush", "available", "skip", "mark", "reset", "markSupported", "readLine",
    "readInt", "readDouble", "readBoolean", "readByte", "readShort", "readLong", "readFloat",
    "readChar", "readUTF", "writeInt", "writeDouble", "writeBoolean", "writeByte", "writeShort",
    "writeLong", "writeFloat", "writeChar", "writeUTF", "size", "add", "remove", "get", "set",
    "contains", "isEmpty", "clear", "addAll", "removeAll", "retainAll", "containsAll",
    "toArray", "iterator", "listIterator", "subList", "indexOf", "lastIndexOf", "set",
    "add", "remove", "get", "put", "containsKey", "containsValue", "keySet", "values",
    "entrySet", "remove", "putAll", "clear", "size", "isEmpty", "getOrDefault", "putIfAbsent",
    "remove", "replace", "replaceAll", "computeIfAbsent", "computeIfPresent", "compute",
    "merge", "forEach", "replaceAll", "sort", "reverse", "shuffle", "rotate", "swap",
    "fill", "copy", "binarySearch", "asList", "sublist", "indexOf", "lastIndexOf",
    "contains", "add", "remove", "set", "get", "size", "isEmpty", "clear", "toArray"
  ],
  "common_libraries": [
    "java.lang", "java.util", "java.io", "java.net", "java.math", "java.text", "java.time",
    "java.nio", "java.security", "java.sql", "java.awt", "javax.swing", "java.applet",
    "java.beans", "java.rmi", "java.util.concurrent", "java.util.stream", "java.util.function",
    "java.util.regex", "java.util.logging", "java.util.prefs", "java.util.zip", "java.util.jar",
    "java.util.concurrent.atomic", "java.util.concurrent.locks", "java.util.concurrent.atomic",
    "java.util.concurrent.Executors", "java.util.concurrent.ExecutorService", "java.util.concurrent.Future",
    "java.util.concurrent.CompletableFuture", "java.util.concurrent.Callable", "java.util.concurrent.Runnable",
    "java.util.concurrent.ScheduledExecutorService", "java.util.concurrent.ThreadPoolExecutor",
    "java.util.concurrent.ForkJoinPool", "java.util.concurrent.ConcurrentHashMap",
    "java.util.concurrent.ConcurrentLinkedQueue", "java.util.concurrent.BlockingQueue",
    "java.util.concurrent.LinkedBlockingQueue", "java.util.concurrent.ArrayBlockingQueue",
    "java.util.concurrent.PriorityBlockingQueue", "java.util.concurrent.DelayQueue",
    "java.util.concurrent.SynchronousQueue", "java.util.concurrent.TransferQueue",
    "java.util.concurrent.LinkedTransferQueue", "java.util.concurrent.ConcurrentSkipListMap",
    "java.util.concurrent.ConcurrentSkipListSet", "java.util.concurrent.CopyOnWriteArrayList",
    "java.util.concurrent.CopyOnWriteArraySet", "java.util.concurrent.Phaser", "java.util.concurrent.CountDownLatch",
    "java.util.concurrent.CyclicBarrier", "java.util.concurrent.Exchanger", "java.util.concurrent.Semaphore",
    "java.util.concurrent.locks.ReentrantLock", "java.util.concurrent.locks.ReentrantReadWriteLock",
    "java.util.concurrent.locks.Condition", "java.util.concurrent.locks.LockSupport",
    "java.util.concurrent.atomic.AtomicInteger", "java.util.concurrent.atomic.AtomicLong",
    "java.util.concurrent.atomic.AtomicBoolean", "java.util.concurrent.atomic.AtomicReference",
    "java.util.concurrent.atomic.AtomicIntegerArray", "java.util.concurrent.atomic.AtomicLongArray",
    "java.util.concurrent.atomic.AtomicReferenceArray", "java.util.concurrent.atomic.AtomicIntegerFieldUpdater",
    "java.util.concurrent.atomic.AtomicLongFieldUpdater", "java.util.concurrent.atomic.AtomicReferenceFieldUpdater",
    "java.util.concurrent.atomic.AtomicMarkableReference", "java.util.concurrent.atomic.AtomicStampedReference",
    "java.util.concurrent.atomic.DoubleAccumulator", "java.util.concurrent.atomic.DoubleAdder",
    "java.util.concurrent.atomic.LongAccumulator", "java.util.concurrent.atomic.LongAdder"
  ]
} 